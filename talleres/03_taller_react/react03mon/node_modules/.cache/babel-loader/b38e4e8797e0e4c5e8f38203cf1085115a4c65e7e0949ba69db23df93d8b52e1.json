{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\Documents\\\\GitHub\\\\MujeresDigitales\\\\talleres\\\\03_taller_react\\\\react03mon\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\n// Componente principal: App\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ejercicios de Estado y Ciclo de Vida en React 03 Mon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Contador, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CicloDeVida, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ComponenteCombinado, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;\n\n/*\n--- Ejercicio 1: Contador simple ---\nCrea un componente que muestre un contador. Al hacer clic en un botón, el contador debe incrementarse.\n\nObjetivo: Que los estudiantes entiendan cómo funciona this.state y el método setState para actualizar el estado.\n*/\n\n// Ejercicio 1: Contador simple\nclass Contador extends Component {\n  constructor(props) {\n    super(props);\n    this.incrementarContador = () => {\n      this.setState({\n        contador: this.state.contador + 1\n      });\n    };\n    this.state = {\n      contador: 0\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"component\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contador Simple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counter-display\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: this.state.contador\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: this.incrementarContador,\n        children: \"Incrementar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n/*\n--- Ejercicio 2: Ciclo de vida de un componente ---\nCrea un componente que muestre un mensaje en la consola cuando se monte, actualice y desmonte.\n\nObjetivo: Que los estudiantes practiquen los métodos del ciclo de vida y vean cómo responden a cambios de estado.\n*/\n\nclass CicloDeVida extends Component {\n  constructor(props) {\n    super(props);\n    this.incrementarValor = () => {\n      this.setState({\n        valor: this.state.valor + 1\n      });\n    };\n    this.desmontarComponente = () => {\n      this.setState({\n        montado: false\n      });\n    };\n    this.state = {\n      valor: 0,\n      montado: true // Controla si el componente está montado\n    };\n  }\n  componentDidMount() {\n    console.log('2.1. El componente se ha MONTADO - Ejercicio #2');\n  }\n  componentDidUpdate(prevProps, prevState) {\n    console.log('2.2. El componente se ha ACTUALIZADO - Ejercicio #2');\n  }\n  componentWillUnmount() {\n    console.log('2.3. El componente se DESMONTARÁ - Ejercicio #2');\n  }\n  render() {\n    if (!this.state.montado) return null; // Si no está montado, no renderiza nada\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"component\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ciclo de Vida del Componente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counter-display\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: this.state.valor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: this.incrementarValor,\n        children: \"Incrementar Valor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: this.desmontarComponente,\n        children: \"Desmontar Componente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n/*\nInstrucciones:\n1. Realiza ambos ejercicios en tu entorno de desarrollo. Intenta modificar el código para explorar cómo funcionan setState y los métodos del ciclo de vida.\n2. Observa los mensajes en la consola cuando el componente se monta, actualiza y se desmonta.\n3. Opcional: Crea un tercer componente que combine lo aprendido sobre setState y ciclo de vida (por ejemplo, un componente que cambie un valor cuando se actualice).\n*/\n\nclass ComponenteCombinado extends Component {\n  constructor(props) {\n    super(props);\n    this.incrementarContador = () => {\n      this.setState({\n        contador: this.state.contador + 1\n      });\n    };\n    this.state = {\n      contador: 0\n    };\n  }\n  componentDidMount() {\n    console.log('3.1. El componente combinado se ha MONTADO - Ejercicio #3');\n  }\n  componentDidUpdate(prevProps, prevState) {\n    console.log('3.2. El componente combinado se ha ACTUALIZADO - Ejercicio #3');\n  }\n  componentWillUnmount() {\n    console.log('3.3. EL componente combinado se DESMONTARÁ - Ejercicio #3');\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"component\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Componente Combinado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counter-display\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: this.state.contador\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: this.incrementarContador,\n        children: \"Incrementar Combinado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","App","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Contador","CicloDeVida","ComponenteCombinado","constructor","props","incrementarContador","setState","contador","state","onClick","incrementarValor","valor","desmontarComponente","montado","componentDidMount","console","log","componentDidUpdate","prevProps","prevState","componentWillUnmount"],"sources":["C:/Users/USUARIO/Documents/GitHub/MujeresDigitales/talleres/03_taller_react/react03mon/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css'; \n\n// Componente principal: App\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Ejercicios de Estado y Ciclo de Vida en React 03 Mon</h1>\n        <Contador />\n        <CicloDeVida />\n        <ComponenteCombinado />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n/*\n--- Ejercicio 1: Contador simple ---\nCrea un componente que muestre un contador. Al hacer clic en un botón, el contador debe incrementarse.\n\nObjetivo: Que los estudiantes entiendan cómo funciona this.state y el método setState para actualizar el estado.\n*/\n\n// Ejercicio 1: Contador simple\nclass Contador extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contador: 0\n    };\n  }\n\n  incrementarContador = () => {\n    this.setState({ contador: this.state.contador + 1 });\n  };\n\n  render() {\n    return (\n      <div className=\"component\">\n        <h2>Contador Simple</h2>\n        <div className=\"counter-display\">\n          <h3>{this.state.contador}</h3>\n        </div>\n        <button className=\"btn\" onClick={this.incrementarContador}>\n          Incrementar\n        </button>\n      </div>\n    );\n  }\n}\n\n/*\n--- Ejercicio 2: Ciclo de vida de un componente ---\nCrea un componente que muestre un mensaje en la consola cuando se monte, actualice y desmonte.\n\nObjetivo: Que los estudiantes practiquen los métodos del ciclo de vida y vean cómo responden a cambios de estado.\n*/\n\nclass CicloDeVida extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valor: 0,\n      montado: true // Controla si el componente está montado\n    };\n  }\n\n  componentDidMount() {\n    console.log('2.1. El componente se ha MONTADO - Ejercicio #2');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('2.2. El componente se ha ACTUALIZADO - Ejercicio #2');\n  }\n\n  componentWillUnmount() {\n    console.log('2.3. El componente se DESMONTARÁ - Ejercicio #2');\n  }\n\n  incrementarValor = () => {\n    this.setState({ valor: this.state.valor + 1 });\n  };\n\n  desmontarComponente = () => {\n    this.setState({ montado: false });\n  };\n\n  render() {\n    if (!this.state.montado) return null; // Si no está montado, no renderiza nada\n\n    return (\n      <div className=\"component\">\n        <h2>Ciclo de Vida del Componente</h2>\n        <div className=\"counter-display\">\n          <h3>{this.state.valor}</h3>\n        </div>\n        <button className=\"btn\" onClick={this.incrementarValor}>\n          Incrementar Valor\n        </button>\n        <button className=\"btn\" onClick={this.desmontarComponente}>\n          Desmontar Componente\n        </button>\n      </div>\n    );\n  }\n}\n\n/*\nInstrucciones:\n1. Realiza ambos ejercicios en tu entorno de desarrollo. Intenta modificar el código para explorar cómo funcionan setState y los métodos del ciclo de vida.\n2. Observa los mensajes en la consola cuando el componente se monta, actualiza y se desmonta.\n3. Opcional: Crea un tercer componente que combine lo aprendido sobre setState y ciclo de vida (por ejemplo, un componente que cambie un valor cuando se actualice).\n*/\n\nclass ComponenteCombinado extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contador: 0\n    };\n  }\n\n  componentDidMount() {\n    console.log('3.1. El componente combinado se ha MONTADO - Ejercicio #3');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('3.2. El componente combinado se ha ACTUALIZADO - Ejercicio #3');\n  }\n\n  componentWillUnmount() {\n    console.log('3.3. EL componente combinado se DESMONTARÁ - Ejercicio #3');\n  }\n\n  incrementarContador = () => {\n    this.setState({ contador: this.state.contador + 1 });\n  };\n\n  render() {\n    return (\n      <div className=\"component\">\n        <h2>Componente Combinado</h2>\n        <div className=\"counter-display\">\n          <h3>{this.state.contador}</h3>\n        </div>\n        <button className=\"btn\" onClick={this.incrementarContador}>\n          Incrementar Combinado\n        </button>\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}