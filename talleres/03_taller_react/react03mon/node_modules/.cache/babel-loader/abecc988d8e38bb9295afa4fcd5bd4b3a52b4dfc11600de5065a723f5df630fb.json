{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\Documents\\\\GitHub\\\\MujeresDigitales\\\\talleres\\\\03_taller_react\\\\react03mon\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\n// Componente principal: App\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ejercicios de Estado y Ciclo de Vida en React 03 Mon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Contador, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CicloDeVida, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ComponenteCombinado, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n/*\n--- Ejercicio 1: Contador simple ---\nCrea un componente que muestre un contador. Al hacer clic en un botón, el contador debe incrementarse.\n\nObjetivo: Que los estudiantes entiendan cómo funciona this.state y el método setState para actualizar el estado.\n*/\n\n// Ejercicio 1: Contador simple\nclass Contador extends Component {\n  constructor(props) {\n    super(props);\n    this.incrementarContador = () => {\n      this.setState(prevState => ({\n        contador: prevState.contador + 1\n      }));\n    };\n    this.state = {\n      contador: 0\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"component\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contador Simple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counter-display\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: this.state.contador\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: this.incrementarContador,\n        children: \"Incrementar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n/*\n--- Ejercicio 2: Ciclo de vida de un componente ---\nCrea un componente que muestre un mensaje en la consola cuando se monte, actualice y desmonte.\n\nObjetivo: Que los estudiantes practiquen los métodos del ciclo de vida y vean cómo responden a cambios de estado.\n*/\n\n// Ejercicio 2: Ciclo de vida de un componente\nclass CicloDeVida extends Component {\n  constructor(props) {\n    super(props);\n    this.incrementarValor = () => {\n      this.setState(prevState => ({\n        valor: prevState.valor + 1\n      }));\n    };\n    this.toggleMontado = () => {\n      this.setState(prevState => ({\n        montado: !prevState.montado\n      }));\n    };\n    this.state = {\n      valor: 0,\n      montado: true\n    };\n  }\n  componentDidMount() {\n    console.log('2.1. El componente se ha MONTADO - Ejercicio #2');\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.valor !== this.state.valor) {\n      console.log('2.2. El componente se ha ACTUALIZADO - Ejercicio #2');\n    }\n    if (prevState.montado !== this.state.montado) {\n      if (this.state.montado) {\n        console.log('2.1. El componente se ha MONTADO - Ejercicio #2');\n      } else {\n        console.log('2.3. El componente se DESMONTARÁ - Ejercicio #2');\n      }\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"component\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ciclo de Vida del Componente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), this.state.montado ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"counter-display\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: this.state.valor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: this.incrementarValor,\n          children: \"Incrementar Valor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"El componente est\\xE1 desmontado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: this.toggleMontado,\n        children: [this.state.montado ? 'Desmontar' : 'Montar', \" Componente\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n/*\nInstrucciones:\n1. Realiza ambos ejercicios en tu entorno de desarrollo. Intenta modificar el código para explorar cómo funcionan setState y los métodos del ciclo de vida.\n2. Observa los mensajes en la consola cuando el componente se monta, actualiza y se desmonta.\n3. Opcional: Crea un tercer componente que combine lo aprendido sobre setState y ciclo de vida (por ejemplo, un componente que cambie un valor cuando se actualice).\n*/\n\n// Componente Combinado\nclass ComponenteCombinado extends Component {\n  constructor(props) {\n    super(props);\n    this.incrementarContador = () => {\n      this.setState(prevState => ({\n        contador: prevState.contador + 1\n      }));\n    };\n    this.toggleMontado = () => {\n      this.setState(prevState => ({\n        montado: !prevState.montado\n      }));\n    };\n    this.state = {\n      contador: 0,\n      montado: true\n    };\n  }\n  componentDidMount() {\n    console.log('3.1. El componente combinado se ha MONTADO - Ejercicio #3');\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contador !== this.state.contador) {\n      console.log('3.2. El componente combinado se ha ACTUALIZADO - Ejercicio #3');\n    }\n    if (prevState.montado !== this.state.montado) {\n      if (this.state.montado) {\n        console.log('3.1. El componente combinado se ha MONTADO - Ejercicio #3');\n      } else {\n        console.log('3.3. El componente combinado se DESMONTARÁ - Ejercicio #3');\n      }\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"component\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Componente Combinado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), this.state.montado ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"counter-display\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: this.state.contador\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: this.incrementarContador,\n          children: \"Incrementar Combinado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"El componente combinado est\\xE1 desmontado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: this.toggleMontado,\n        children: [this.state.montado ? 'Desmontar' : 'Montar', \" Componente Combinado\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Fragment","_Fragment","App","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Contador","CicloDeVida","ComponenteCombinado","constructor","props","incrementarContador","setState","prevState","contador","state","onClick","incrementarValor","valor","toggleMontado","montado","componentDidMount","console","log","componentDidUpdate","prevProps"],"sources":["C:/Users/USUARIO/Documents/GitHub/MujeresDigitales/talleres/03_taller_react/react03mon/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n// Componente principal: App\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Ejercicios de Estado y Ciclo de Vida en React 03 Mon</h1>\n        <Contador />\n        <CicloDeVida />\n        <ComponenteCombinado />\n      </div>\n    );\n  }\n}\n\n/*\n--- Ejercicio 1: Contador simple ---\nCrea un componente que muestre un contador. Al hacer clic en un botón, el contador debe incrementarse.\n\nObjetivo: Que los estudiantes entiendan cómo funciona this.state y el método setState para actualizar el estado.\n*/\n\n// Ejercicio 1: Contador simple\nclass Contador extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contador: 0\n    };\n  }\n\n  incrementarContador = () => {\n    this.setState(prevState => ({ contador: prevState.contador + 1 }));\n  };\n\n  render() {\n    return (\n      <div className=\"component\">\n        <h2>Contador Simple</h2>\n        <div className=\"counter-display\">\n          <h3>{this.state.contador}</h3>\n        </div>\n        <button className=\"btn\" onClick={this.incrementarContador}>\n          Incrementar\n        </button>\n      </div>\n    );\n  }\n}\n\n/*\n--- Ejercicio 2: Ciclo de vida de un componente ---\nCrea un componente que muestre un mensaje en la consola cuando se monte, actualice y desmonte.\n\nObjetivo: Que los estudiantes practiquen los métodos del ciclo de vida y vean cómo responden a cambios de estado.\n*/\n\n// Ejercicio 2: Ciclo de vida de un componente\nclass CicloDeVida extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valor: 0,\n      montado: true\n    };\n  }\n\n  componentDidMount() {\n    console.log('2.1. El componente se ha MONTADO - Ejercicio #2');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.valor !== this.state.valor) {\n      console.log('2.2. El componente se ha ACTUALIZADO - Ejercicio #2');\n    }\n    if (prevState.montado !== this.state.montado) {\n      if (this.state.montado) {\n        console.log('2.1. El componente se ha MONTADO - Ejercicio #2');\n      } else {\n        console.log('2.3. El componente se DESMONTARÁ - Ejercicio #2');\n      }\n    }\n  }\n\n  incrementarValor = () => {\n    this.setState(prevState => ({ valor: prevState.valor + 1 }));\n  };\n\n  toggleMontado = () => {\n    this.setState(prevState => ({ montado: !prevState.montado }));\n  };\n\n  render() {\n    return (\n      <div className=\"component\">\n        <h2>Ciclo de Vida del Componente</h2>\n        {this.state.montado ? (\n          <>\n            <div className=\"counter-display\">\n              <h3>{this.state.valor}</h3>\n            </div>\n            <button className=\"btn\" onClick={this.incrementarValor}>\n              Incrementar Valor\n            </button>\n          </>\n        ) : (\n          <p>El componente está desmontado</p>\n        )}\n        <button className=\"btn\" onClick={this.toggleMontado}>\n          {this.state.montado ? 'Desmontar' : 'Montar'} Componente\n        </button>\n      </div>\n    );\n  }\n}\n\n/*\nInstrucciones:\n1. Realiza ambos ejercicios en tu entorno de desarrollo. Intenta modificar el código para explorar cómo funcionan setState y los métodos del ciclo de vida.\n2. Observa los mensajes en la consola cuando el componente se monta, actualiza y se desmonta.\n3. Opcional: Crea un tercer componente que combine lo aprendido sobre setState y ciclo de vida (por ejemplo, un componente que cambie un valor cuando se actualice).\n*/\n\n// Componente Combinado\nclass ComponenteCombinado extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contador: 0,\n      montado: true\n    };\n  }\n\n  componentDidMount() {\n    console.log('3.1. El componente combinado se ha MONTADO - Ejercicio #3');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contador !== this.state.contador) {\n      console.log('3.2. El componente combinado se ha ACTUALIZADO - Ejercicio #3');\n    }\n    if (prevState.montado !== this.state.montado) {\n      if (this.state.montado) {\n        console.log('3.1. El componente combinado se ha MONTADO - Ejercicio #3');\n      } else {\n        console.log('3.3. El componente combinado se DESMONTARÁ - Ejercicio #3');\n      }\n    }\n  }\n\n  incrementarContador = () => {\n    this.setState(prevState => ({ contador: prevState.contador + 1 }));\n  };\n\n  toggleMontado = () => {\n    this.setState(prevState => ({ montado: !prevState.montado }));\n  };\n\n  render() {\n    return (\n      <div className=\"component\">\n        <h2>Componente Combinado</h2>\n        {this.state.montado ? (\n          <>\n            <div className=\"counter-display\">\n              <h3>{this.state.contador}</h3>\n            </div>\n            <button className=\"btn\" onClick={this.incrementarContador}>\n              Incrementar Combinado\n            </button>\n          </>\n        ) : (\n          <p>El componente combinado está desmontado</p>\n        )}\n        <button className=\"btn\" onClick={this.toggleMontado}>\n          {this.state.montado ? 'Desmontar' : 'Montar'} Componente Combinado\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}